{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","PropTypes","string","isRequired","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","hiddenError","setHiddenError","hiddenPreview","setPreview","hiddenErMovieRepeat","setHiddenErMovieRepeat","submitDisabled","setSubmitDisabled","findMovie","a","fetch","then","response","json","newMovie","allImdbID","movieData","Title","Plot","Poster","imdbID","includes","undefined","onSubmit","e","preventDefault","handleSubmit","htmlFor","type","id","value","onChange","target","placeholder","onClick","disabled","hidden","App","data","setMovies","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09956e18.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nexport const MovieCardType = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.propTypes = MovieCardType;\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({\r\n  movies = [],\r\n}) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imdbId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FindMovie.scss';\n\nimport { MovieCard, MovieCardType } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n  });\n  const [hiddenError, setHiddenError] = useState('hidden');\n  const [hiddenPreview, setPreview] = useState(true);\n  const [hiddenErMovieRepeat, setHiddenErMovieRepeat] = useState('hidden');\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  function getMovie() {\n    return fetch(`https://www.omdbapi.com/?apikey=6e3cbe75&t=${title}`)\n      .then(response => response.json());\n  }\n\n  const findMovie = async() => {\n    const newMovie = await getMovie(title);\n    const allImdbID = movies.map(movieData => movieData.imdbId);\n\n    if (newMovie.Title) {\n      setSubmitDisabled(false);\n      setMovie({\n        title: newMovie.Title,\n        description: newMovie.Plot,\n        imgUrl: newMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n        imdbId: newMovie.imdbID,\n      });\n    }\n\n    if (allImdbID.includes(newMovie.imdbID)) {\n      setHiddenErMovieRepeat('help is-danger');\n      setSubmitDisabled(true);\n    } else {\n      setHiddenErMovieRepeat('hidden');\n    }\n\n    if (newMovie.Title === undefined) {\n      setHiddenError('help is-danger');\n      setPreview(true);\n    } else {\n      setHiddenError('hidden');\n      setPreview(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addMovie(movie);\n    setTitle('');\n    setPreview(true);\n    setSubmitDisabled(true);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={e => handleSubmit(e)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              onChange={(e) => {\n                setHiddenError('hidden');\n                setTitle(e.target.value);\n              }}\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n            />\n          </div>\n\n          <p className={hiddenError}>\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findMovie()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={submitDisabled}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <p className={hiddenErMovieRepeat}>\n          We have such movie!\n        </p>\n        <div hidden={hiddenPreview}>\n          <MovieCard {...movie} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    ...MovieCardType,\n    imdbId: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n  const [hiddenErMovieRepeat, setHiddenErMovieRepeat] = useState(true);\n\n  const addMovie = (movie) => {\n    if (movie.title === undefined) {\n      setHiddenErMovieRepeat(false);\n\n      return;\n    }\n\n    setMovies(current => [\n      ...current,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={addMovie}\n          setHiddenErMovieRepeat={setHiddenErMovieRepeat}\n          hiddenErMovieRepeat={hiddenErMovieRepeat}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}