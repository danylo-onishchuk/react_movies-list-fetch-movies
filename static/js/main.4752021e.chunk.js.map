{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/InputFindMovie/InputFindMovie.jsx","api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","PropTypes","string","isRequired","movies","map","movie","key","imdbId","InputFindMovie","handleSubmit","findMovie","setTitle","hiddenError","setHiddenError","submitDisabled","onSubmit","htmlFor","type","id","value","onChange","e","target","placeholder","onClick","disabled","getMovie","fetch","then","response","json","FindMovie","addMovie","useState","setMovie","hiddenPreview","setPreview","hiddenErMovieRepeat","setHiddenErMovieRepeat","setSubmitDisabled","a","newMovie","allImdbID","movieData","Title","Plot","Poster","imdbID","includes","preventDefault","hidden","App","data","setMovies","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4752021e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nexport const MovieCardType = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.propTypes = MovieCardType;\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const InputFindMovie = ({ handleSubmit, findMovie, title,\n  setTitle, hiddenError, setHiddenError, submitDisabled }) => (\n    <form\n      className=\"find-movie\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"movie-title\">\n          Movie title\n        </label>\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            id=\"movie-title\"\n            value={title}\n            onChange={(e) => {\n              setHiddenError('hidden');\n              setTitle(e.target.value);\n            }}\n            placeholder=\"Enter a title to search\"\n            className=\"input\"\n          />\n        </div>\n\n        <p className={hiddenError}>\n          Can&apos;t find a movie with such a title\n        </p>\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-light\"\n            onClick={() => findMovie()}\n          >\n            Find a movie\n          </button>\n        </div>\n\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-primary\"\n            disabled={submitDisabled}\n          >\n            Add to the list\n          </button>\n        </div>\n      </div>\n    </form>\n\n);\n\nInputFindMovie.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  findMovie: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  setTitle: PropTypes.func.isRequired,\n  hiddenError: PropTypes.string.isRequired,\n  setHiddenError: PropTypes.func.isRequired,\n  submitDisabled: PropTypes.bool.isRequired,\n};\n","export function getMovie(title) {\n  return fetch(`https://www.omdbapi.com/?apikey=6e3cbe75&t=${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FindMovie.scss';\n\nimport { MovieCard, MovieCardType } from '../MovieCard';\nimport { InputFindMovie } from '../InputFindMovie';\nimport { getMovie } from '../../api';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n  });\n  const [hiddenError, setHiddenError] = useState('hidden');\n  const [hiddenPreview, setPreview] = useState(true);\n  const [hiddenErMovieRepeat, setHiddenErMovieRepeat] = useState('hidden');\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  const findMovie = async() => {\n    const newMovie = await getMovie(title);\n    const allImdbID = movies.map(movieData => movieData.imdbId);\n\n    if (newMovie.Title) {\n      setSubmitDisabled(false);\n      setMovie({\n        title: newMovie.Title,\n        description: newMovie.Plot,\n        imgUrl: newMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n        imdbId: newMovie.imdbID,\n      });\n    }\n\n    if (allImdbID.includes(newMovie.imdbID)) {\n      setHiddenErMovieRepeat('help is-danger');\n      setSubmitDisabled(true);\n    } else {\n      setHiddenErMovieRepeat('hidden');\n    }\n\n    if (!newMovie.Title) {\n      setHiddenError('help is-danger');\n      setPreview(true);\n    } else {\n      setHiddenError('hidden');\n      setPreview(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addMovie(movie);\n    setTitle('');\n    setPreview(true);\n    setSubmitDisabled(true);\n  };\n\n  return (\n    <>\n      <InputFindMovie\n        handleSubmit={handleSubmit}\n        findMovie={findMovie}\n        title={title}\n        setTitle={setTitle}\n        hiddenError={hiddenError}\n        setHiddenError={setHiddenError}\n        submitDisabled={submitDisabled}\n      />\n      <div className=\"container\">\n        <p className={hiddenErMovieRepeat}>\n          We have such movie!\n        </p>\n        <div hidden={hiddenPreview}>\n          <MovieCard {...movie} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    ...MovieCardType,\n    imdbId: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n  const [hiddenErMovieRepeat, setHiddenErMovieRepeat] = useState(true);\n\n  const addMovie = (movie) => {\n    if (!movie.title) {\n      setHiddenErMovieRepeat(false);\n\n      return;\n    }\n\n    setMovies(current => [\n      ...current,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={addMovie}\n          setHiddenErMovieRepeat={setHiddenErMovieRepeat}\n          hiddenErMovieRepeat={hiddenErMovieRepeat}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}